apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  annotations:
    run.googleapis.com/launch-stage: BETA
    run.googleapis.com/ingress: internal-and-cloud-load-balancing
  name: ${SERVICE_NAME}
  labels:
    region: ${REGION}
    app_code: "3kv"
    classification: "highly-confidential"
    cost_id: "14203"
    department_id: "12756"
    project_id:  "it-ncinvdev"
    tco_id: "itg_inv"
    app_environment: "dev"
    sc_group: "corp-infra-cloud-platform"
    app_instance: "snsvc0023718"
spec:
  template:
    metadata:
      name: ${SERVICE_NAME}-${REVISION_TAG}
      annotations:
        run.googleapis.com/execution-environment: gen2
        autoscaling.knative.dev/minScale: '3'
        autoscaling.knative.dev/maxScale: '100'
        run.googleapis.com/container-dependencies: '{"${SERVICE_NAME}":["cloudsqlproxy-sidecar"]}'
        run.googleapis.com/base-images: >-
          {"${SERVICE_NAME}":"us-central1-docker.pkg.dev/serverless-runtimes/google-22-full/runtimes/python312"}
    spec:
      containerConcurrency: 80
      timeoutSeconds: 300
      serviceAccountName: ${CLOUD_RUN_SA}
      containers:
      - name: ${SERVICE_NAME}
        image: ${CONTAINER_IMAGE}
        ports:
        - name: http1
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
          periodSeconds: 15
        env:
        - name: PROJECT_ID
          value: ${PROJECT_ID}
        - name: DB_HOST
          value: 127.0.0.1
        - name: DB_NAME
          value: postgres
        - name: DB_IAM_USER
          value: test-sql-iam-login@${PROJECT_ID}.iam
        - name: DB_PORT
          value: "5432"
      - name: cloudsqlproxy-sidecar
        image: 'gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.11.0'
        args:
        - '--structured-logs'
        - '--port=5432'
        - '--auto-iam-authn'
        - '--lazy-refresh'
        env:
        - name: CSQL_PROXY_INSTANCE_CONNECTION_NAME
          value: 'kodrama-playground-348505:us-central1:test-postgres-instance'
        - name: CSQL_PROXY_HEALTH_CHECK
          value: "true"
        - name: CSQL_PROXY_HTTP_PORT
          value: "9801"
        - name: CSQL_PROXY_HTTP_ADDRESS
          value: 0.0.0.0

        # Configure the proxy to exit gracefully when sent from a different container
        # file.
        - name: CSQL_PROXY_EXIT_ZERO_ON_SIGTERM
          value: "true"

        # Enable the admin api server (which only listens for local connections)
        # and enable the /quitquitquit endpoint. This allows other containers
        # to shut down the proxy gracefully when they are ready to exit.
        - name: CSQL_PROXY_QUITQUITQUIT
          value: "true"
        - name: CSQL_PROXY_ADMIN_PORT
          value: "9092"
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /startup
            port: 9801
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          timeoutSeconds: 5
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 3
          httpGet:
            path: /liveness
            port: 9801

      runtimeClassName: run.googleapis.com/linux-base-image-update
  traffic:

  - latestRevision: true
    percent: 100

